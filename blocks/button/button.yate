func nb-button(nodeset options) {
    default = {
        'size': 'm'
        'theme': 'normal'
    }

    nb-block('button', nb-extend(default, options))
}

match .button nb {
    <button>
        apply . nb-main-attrs
        apply . nb-main-content
    </button>
}

match .button[.href] nb {
    <a>
        apply . nb-main-attrs
        apply . nb-main-content
    </a>
}

match .button[.mod == 'attach'] nb {
    <span>
        apply . nb-main-attrs
        apply . nb-main-content
        <input type="file" class="nb-button__attach"></input>
    </span>
}

match .button nb-attrs {
    @data-nb = 'button'
    @class = 'nb-button'
}

match .button[!.disabled].href nb-attrs {
    @href="{.}"
}

match .button.size nb-attrs {
    @class += ' nb-button_size_{.}'
}

match .button.theme nb-attrs {
    @class += ' nb-button_theme_{.}'
}

match .button.disabled nb-attrs {
    @class += ' nb-button_disabled js-disabled'
    @disabled = 'disabled'
}

match .button[ .mod == 'attach'] nb-attrs {
    @class = 'nb-button nb-button_type_attach'
    @data-nb = 'button'
}

match .button[ .mod == 'round'] nb-attrs {
    @class = 'nb-button nb-button_type_round'
}

match .button[!(.content)].icon nb-attrs {
    @class += ' nb-button_only-icon'
}

match .button nb-content {
    <span class="nb-button__text">
        apply . nb-content-button
    </span>
}

match .button nb-content-button {
    .content
}

match .button[.content && .icon] nb-content-button {
    apply .icon nb
    .content
}

match .button[!.content && .icon] nb-content-button {
    html('&nbsp;')
    apply .icon nb
}
