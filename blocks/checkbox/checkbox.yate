func nb-checkbox(nodeset options) {
    default = {
        'size': 'm'
        'type': 'checkbox'
        'theme': 'normal'
    }

    nb-block('checkbox', nb-extend(default, options))
}

match .checkbox nb {
    uniq = if .id {
        .id
    } else {
        nb-uniq()
    }

    <label data-nb='checkbox' class="nb-checkbox nb-checkbox_size_{ .size } nb-checkbox_type_{ .type } _init" for="nb-checkbox_{ uniq }">
        apply . nb-main-attrs

        if .disabled  {
             @class += ' nb-is-disabled'
        }


        <input class="nb-checkbox__input" id="nb-checkbox_{ uniq }">
            if .type == 'button' {
                @type = 'checkbox'
            } else {
                @type = .type
            }

            if .name {
                @name = .name
            }

            if .tabindex {
                @tabindex = .tabindex
            }

            if .disabled  {
                 @disabled = 'disabled'
            }

            if .checked {
                @checked = 'checked'
            }

            // бесмысленная и беспощадная проверка на наличие свойства value
            // потому что пустое value и его отсутствие - не одно и то же
            if count(.value) {
                @value = .value
            }

        </input>

        if .type == 'button' {
            nb-button(nb-extend(., {
                'type': 'span'
                'class': [
                    'nb-checkbox__label'
                ]
            }))
        } else {
            <span class="nb-checkbox__flag nb-checkbox__flag_type_{ .type }"><span class="nb-checkbox__flag__icon"></span></span>
            <span class="nb-checkbox__label">
                if (.content) {
                    html(.content)
                }
            </span>
        }
    </label>
}
