func nb-select(nodeset select) {
    default = {
        'size': 'm'
        'theme': 'normal'
        'direction': 'bottom'
    }

    nb-block('select', nb-extend(default, select))
}

match .select nb {
   <div>
       @id = .id
       @data-nb = 'select'
       @data-nb-direction = .direction
       @class = 'nb-select ui-front _init'
       @class += ' nb-select_size_' + .size
       @class += ' nb-select_theme_' + .theme

       apply . nb-main-content
   </div>
}


match .select nb-content {
    <button>
        @data-nb = 'button'
        @class = 'nb-button nb-select__button _init'

        apply .* nb-button-attrs

        <span class="nb-button__text">
           apply .items nb-button-content
        </span>
    </button>
   <select>
        @id = 'nb-select_' + .id
        @class = 'nb-select__fallback'
        @name = .id

        if ( .disabled ) {
            @disabled = 'disabled'
        }

        apply .items nb-fallback-content
   </select>
}


match .select.items nb-fallback-content {
    <option>
        @label = .text
        @value = .value

        if (.selected) {
              @selected = ''
        }

        .text
    </option>
}

match .select.items[ .selected ] nb-button-content {
    .text
}


match .select.size nb-button-attrs {
    @class += ' nb-button_size_{.}'
}

match .select.theme nb-button-attrs {
    @class += ' nb-button_theme_{.}'
}



match .select.disabled nb-button-attrs {
    @class += ' nb-button_disabled'
    @disabled = 'disabled'
}

match .select[ .mod == 'round'] nb-button-attrs {
    @class = 'nb-button nb-button_type_round'
}

