func nb-select(nodeset select) {
    default = {
        'size': 'm'
        'theme': 'normal'
        'direction': 'bottom'
    }

    nb-block('select', nb-extend(default, select))
}

match .select nb {
    <span data-nb-direction ="{ .direction }" data-nb="select" tabindex="0">
        _nb-button-attributes('span')
        @class += ' nb-select _init nb-select__button'

        if .size == 's' {
            @class += ' nb-small-select'
        }

        apply . nb-main-attrs

        if .within {
            @data-nb-within = .within
        }

        if .maxHeight {
            @data-nb-maxheight = .maxHeight
        }

        <span class="nb-button-content">
            isSelected = count(.items[(.selected)]) > 0

            for .items {
                if (isSelected && .selected) || (!isSelected && index() == 0)  {
                    .text
                }
            }
        </span>
        <span class="nb-select-helper"></span> // Helper for baseline alignment
        <select class="nb-select__fallback">
            if ( .disabled ) {
                @disabled = 'disabled'
            }

            if .name {
                @name = .name
            }

            if .attrs.name {
                @name = .attrs.name
            }

            apply . nb-select-options
        </select>
        <div class="nb-select__dropdown nb-select__dropdown_size_{ .size } nb-select_theme_{ .theme }"></div>
    </span>
}

match / | .select nb-select-options {
    for .items {
        if .group {
            <optgroup label="{ .text }" data-nb-type="{ .type }">
            for .group {
                _select-option(.)
            }
            </optgroup>
        } else {
            _select-option(.)
        }
    }
}

func _select-option(nodeset item) {
    <option>
        @label = item.text
        @value = item.value
        @data-icon = .icon

        if (item.selected) {
              @selected = ''
        }

        item.text
    </option>
}
