func nb-radio-button(nodeset options) {
    default = {
        'size': 'm'
        'theme': 'normal'
    }

    nb-block('radio-button', nb-extend(default, options))
}

match .radio-button nb {
    <span>
        apply . nb-main-attrs
        apply . nb-main-content
    </span>
}

match .radio-button nb-attrs {
    @data-nb = 'radio-button'
    @class = 'nb-radio-button'
}

match .radio-button nb-content {
    apply .group nb-content-radio-button
}

match .radio-button.group nb-content-radio-button {
    button = {
        'size': ..size
        'theme': ..theme
        'class': .class + ' js-button'
        'name': ..name
        'mod': 'radio-button'
        'attrs': {
            'data-value': .value
        }
    }

    nb-button(nb-extend(button, .))
}

match .button[.mod == 'radio-button'] nb {
    uniq = 'nb-radio-button_{nb-uniq()}'

    <label for="{uniq}">
        apply . nb-main-attrs
        apply . nb-main-content

        <input class="nb-radio-button__radio" type="radio" name="{ .name }" value="{ .value }" id="{uniq}">
            if .checked {
                @checked = 'checked'
            }
            if .disabled {
                @disabled = 'disabled'
            }
        </input>
    </label>
}

match .button[.mod == 'radio-button'] nb-attrs {
    @class = 'nb-button'
}


match .button[.mod == 'radio-button'].checked nb-attrs {
    @class += ' nb-button_checked'
}